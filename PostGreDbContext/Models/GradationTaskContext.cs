// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;

namespace PostGreDbContext.Models;

public partial class GradationTaskContext : DbContext
{
    public GradationTaskContext(DbContextOptions<GradationTaskContext> options)
        : base(options)
    {
    }

    public virtual DbSet<MessageDb> MessageDbs { get; set; }

    public virtual DbSet<UserDb> UserDbs { get; set; }

    public virtual DbSet<UserRole> UserRoles { get; set; }

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.Entity<MessageDb>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("message_db_pkey");

            entity.ToTable("message_db", "messages");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IsReceived).HasColumnName("is_received");
            entity.Property(e => e.MessageText)
                .HasMaxLength(1024)
                .HasColumnName("message_text");
            entity.Property(e => e.RecipientId).HasColumnName("recipient_id");
            entity.Property(e => e.SenderId).HasColumnName("sender_id");
        });

        modelBuilder.Entity<UserDb>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("users_pkey");

            entity.ToTable("user_db", "users");

            entity.HasIndex(e => e.UserEmail, "users_user_email_name_key").IsUnique();

            entity.Property(e => e.Id)
                .HasDefaultValueSql("gen_random_uuid()")
                .HasColumnName("id");
            entity.Property(e => e.UserEmail)
                .IsRequired()
                .HasMaxLength(60)
                .HasColumnName("user_email");
            entity.Property(e => e.UserPasswordHash)
                .IsRequired()
                .HasMaxLength(512)
                .HasColumnName("user_password_hash");
            entity.Property(e => e.UserRoleId).HasColumnName("user_role_id");

            entity.HasOne(d => d.UserRole).WithMany(p => p.UserDbs)
                .HasForeignKey(d => d.UserRoleId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("users_user_role_id_fkey");
        });

        modelBuilder.Entity<UserRole>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("user_role_pkey");

            entity.ToTable("user_role", "users");

            entity.HasIndex(e => e.UserRoleName, "user_role_user_role_name_key").IsUnique();

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.UserRoleName)
                .IsRequired()
                .HasMaxLength(30)
                .HasColumnName("user_role_name");
        });

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}